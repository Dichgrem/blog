<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Dich&#x27;blog</title>
    <subtitle>用电子罗盘，转赛博核桃，勘电磁风水，寻网络龙脉</subtitle>
    <link rel="self" type="application/atom+xml" href="https://blog.dich.ink/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blog.dich.ink"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-05-13T00:00:00+00:00</updated>
    <id>https://blog.dich.ink/atom.xml</id>
    <entry xml:lang="en">
        <title>乱七八糟:时间的标准与格式</title>
        <published>2024-05-13T00:00:00+00:00</published>
        <updated>2024-05-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/about-time/"/>
        <id>https://blog.dich.ink/about-time/</id>
        
        <content type="html" xml:base="https://blog.dich.ink/about-time/">&lt;p&gt;前言 时间，作为人类社会中不可或缺的重要元素，其标准化与格式化一直是人类社会发展过程中的重要课题之一。本文将探讨一系列时间标准与格式，从最古老的GMT（格林威治标准时间）到最新的RFC3339，以及各种时区表示方法和日期时间的格式化方式。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ji-shi-ji-shu-yu-guo-ji-yuan-zi-shi&quot;&gt;计时技术与国际原子时&lt;&#x2F;h2&gt;
&lt;p&gt;人类历史上出现的计时手段大体上能分为三类:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;通过某种匀速的运动来表示时间、比如沙漏、水钟、香钟（烧香）。这种方 式的缺陷很大，是一种很粗略的时间衡量方法&lt;&#x2F;li&gt;
&lt;li&gt;通过天文观测，通过日月或其他星辰的参考确定时间。现在我们已经知道，星系的运动也不是匀速的过程。&lt;&#x2F;li&gt;
&lt;li&gt;通过固定频率的震动，最早是伽利略通过教堂的吊灯发现了摆的等时性，也就是摆角较小时，吊灯摆动一次的时间是相同的。距今三四百年前的摆钟，基本上都是利用 这一原理实现的。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;现在，人类已知的最精确的计时技术是原子钟，它以原子共振频率标准来计算和保持 时间的准确。它的精度可以达到持续运行上亿年而误差不超过 1 秒。&lt;&#x2F;p&gt;
&lt;p&gt;基于这种技术，后来国际计量协会结合了全球 400 多个原子钟，规定 1 秒为铯-133 原子基态两个超精细能级间跃迁辐射震荡 9,192,631,770 周所持续的时间。这个定义就叫国际 原子时（International Atomic Time， TAI）。这样，我们钟表里指针应该转多快也有了一个 统一的标准。&lt;&#x2F;p&gt;
&lt;p&gt;国际原子时的秒长以格林威治时间 &lt;code&gt;1958 年 1 月 1 日 0 时&lt;&#x2F;code&gt;的秒长为基准。也就是规定， 在这一瞬间，国际原子时的秒长和世界时的秒长是一样的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gmt-ge-lin-wei-zhi-biao-zhun-shi-jian&quot;&gt;GMT（格林威治标准时间）&lt;&#x2F;h2&gt;
&lt;p&gt;格林威治（又译格林尼治）它是一个位处英国伦敦的小镇。&lt;&#x2F;p&gt;
&lt;p&gt;17 世纪，英国航海事业发展迅速，当时海上航行亟需精确的精度指示，于是英国皇家在格林威治这个地方设立了一个天文台负责测量正确经度的工作。&lt;&#x2F;p&gt;
&lt;p&gt;后来 1884 年，在美国华盛顿召开的国际经度会以决定以经过格林尼治天文台（旧址） 的经线为本初子午线（0 度经线）。同时这次会以也将全球划分为了 24 个时区。0 度经线所 在的时区为 0 时区。&lt;&#x2F;p&gt;
&lt;p&gt;现在，有时候你要买一个机械表，如果它说支持 GMT，意思就是支持显示格林威治标准时间。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;utc-shi-jie-shi&quot;&gt;UTC（世界时）&lt;&#x2F;h2&gt;
&lt;p&gt;UTC 主要用来衡量一天究竟有多长。一旦 一天的长度可以确定，那么将这个长度除以 24 就能确定一小时的长度。以此类推、分钟、 秒的长度我们就都能确定了。&lt;&#x2F;p&gt;
&lt;p&gt;随着科学技术的发展和对时间测量精确度的要求提高，人们逐渐意识到地球自转并不是一个完全恒定的过程，因此需要更准确的时间标准。1928 年，国际天文联合会提出了 UTC（Coordinated Universal Time，协调世界时）的概念.中文称为世界时，是一种基于地球自转的时间标准。它旨在提供一种统一的时间系统，使得全球各地的时间能够保持一致。&lt;&#x2F;p&gt;
&lt;p&gt;世界时是一种天文时间系统，它以地球的自转周期为基础，一天分为24小时，每小时60分钟，每分钟60秒。尽管UTC已经成为现代国际时间标准，但世界时仍然在一些科学和天文领域中使用，尤其是在历法、天文观测和计算机编程等领域。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xiao-jie-utc-gmt&quot;&gt;小结：UTC&#x2F;GMT&lt;&#x2F;h2&gt;
&lt;p&gt;GMT 是最早的国际时间标准，后来是 UTC
因为 UTC 要逼近 UT，而 UT 又以 GMT 为标准。十分严格地说，UTC 和 GMT 不是 一个东西。但宽松地说，你可以把 UTC 等同于 GMT，而且有些网站和应用程序就是这么 干的。
因为 UTC 标准已经使用多年。所以现在如果再看到 GMT 这个词，它指的通常不是 国际时间，而是格林威治所在的时区，也就是 0 时区。同时，通常行政区有很多适应自己 所在地的时区缩写，遗憾的是，这种写法经常会撞车。
比如，CCT，它可以表示美国中部时间（Central Standard Time），澳大利亚中部时间 （Central Standard Time），中国标准时间（China Standard Time）和古巴标准时间（Cuba Standard Time）&lt;&#x2F;p&gt;
&lt;p&gt;所以、如果我写 CCT 2022-08-03 11:56 就很容易误解了。这个时候我们非常需要一种 没有歧义的日期时间写法。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-qu-yu-utc-pian-yi-liang&quot;&gt;时区与 UTC 偏移量&lt;&#x2F;h2&gt;
&lt;p&gt;现行的时区表示更多是使用 UTC+偏移量的方式来表示的。比如北京是在东 8 区，时 间比 UTC 要早 8 小时，那么在表示北京时区的方式就是 UTC+08:00。虽然地理界定上只有 东西十二区，但是什么地方采用什么方式表达时间实际取决于当地的行政命令。因此 UTC+12:00 并不是偏移量的上限。打开你电脑上的日期时间设置，你会发现有的的国家采用的是 UTC+14:00。还有的国家偏移量并不完全是小时的整数倍，比如 UTC+12:45。同时，也有很多应用会使用 GMT+0800 的方式表示，效果是一样的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ri-qi-shi-jian-de-biao-shi-ge-shi&quot;&gt;日期时间的表示格式&lt;&#x2F;h2&gt;
&lt;p&gt;2022 年 9 月 3 日该怎么表示？是 2022&#x2F;09&#x2F;03 还是 2022-09-03 还是 Sep 03 2022 ？这又 是一个标准问题，当前的情况是，各个国家有符合本地习惯的日期时间格式标准，同时国 际上也有诸多日期时间格式标准，比如 ISO 8601 和 RFC3339 等。&lt;&#x2F;p&gt;
&lt;p&gt;各种格式都有软件采用，所以编程语言中的日期标准库，一般都会准备 dateformat 工 具，自己编码日期时间的格式。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;iso-8601&quot;&gt;ISO 8601&lt;&#x2F;h2&gt;
&lt;p&gt;国际标准 ISO 8601，是国际标准化组织的日期和时间的表示方法和我们之前提过的 UTC 不同，UTC 是一种时间标准，而 ISO 8601 是一种标准的时间格式，大多数的编程语 言都支持。&lt;&#x2F;p&gt;
&lt;p&gt;使用 ISO 8601 格式可以明确表示下面的时间。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;公历日期&lt;&#x2F;li&gt;
&lt;li&gt;24 小时制的时间&lt;&#x2F;li&gt;
&lt;li&gt;UTC 时区偏移量&lt;&#x2F;li&gt;
&lt;li&gt;时间间隔&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;以及上面几种元素的组合。&lt;&#x2F;p&gt;
&lt;p&gt;比如，下面就是一个符合 ISO 8601 的日期时间表示。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;2022-09-03T14:13:00Z&lt;&#x2F;code&gt;，这个时间戳中间的 T 用来分隔 日期 和 时间，最后字母 Z 表示 0 时区，也就是 UTC 或 GMT 时间。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;unix-shi-jian-chuo-yu-run-miao&quot;&gt;Unix 时间戳与闰秒&lt;&#x2F;h2&gt;
&lt;p&gt;Unix 时间戳是一种将时间跟踪为运行总秒数的方法，这个技术从 1970 年 1 月 1 日的 UTC 开始。因此，Unix 时间戳只表示从特定时间点到现在的秒数。而且，需要注意的是，无论你身处何地，这个总秒数的值在技术上都不会发生改变。所以这对计算机系统，客户端和服务端的通信和日期跟踪十分有用。&lt;&#x2F;p&gt;
&lt;p&gt;闰秒是为了调整世界时（UTC）与地球自转的不同步而引入的时间修正措施。地球自转速度并不是完全恒定的，它受到地球内部和外部因素的影响，例如地球的摆动和潮汐等。这些因素会导致地球自转周期的微小变化，使得世界时（UTC）和地球自转之间产生了微小的差距。&lt;&#x2F;p&gt;
&lt;p&gt;为了使UTC与地球自转保持同步，国际上约定在需要时通过添加或减少一秒来调整时间。这一秒被称为“闰秒”。通常情况下，闰秒会在 UTC 时间的最后一天（6月30日或12月31日）的23:59:59之后添加，成为23:59:60，这样当UTC时间跨越到下一秒时，就保持了与地球自转的同步。需要注意的是，由于闰秒的引入，这一分钟（含有闰秒的那一秒）会比平常的分钟长一秒。&lt;&#x2F;p&gt;
&lt;p&gt;闰秒由国际地球自转服务（IERS）负责决定何时引入，以及应该是添加一秒还是减少一秒。尽管闰秒对大多数人来说没有太大影响，但对于一些关键系统，如卫星导航、通信和金融交易等，可能会引起一些问题，因为它会导致系统的时间同步需要进行调整。&lt;&#x2F;p&gt;
&lt;p&gt;关于闰秒问题，什么时候出现闰秒是不确定的。那么在 Unix 时间戳里，是怎么处理闰秒的呢？答案是减慢时钟。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#151515;color:#e8e8d3;&quot;&gt;&lt;code&gt;&lt;span&gt;[root@influxdb ~]# date -d &amp;#39;@867715199&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;1997年 07月 01日 星期二 07:59:59 CST
&lt;&#x2F;span&gt;&lt;span&gt;[root@influxdb ~]# date -d &amp;#39;@867715200&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;1997年 07月 01日 星期二 08:00:00 CST
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;比如 1997 年 6 月 30 日 23:59:59 到 1997 年 7 月 1 日 00:00:00 应该发生一次闰秒。&lt;&#x2F;p&gt;
&lt;p&gt;那么 867715200 这个时间戳应该对应 1997 年 6 月 30 日的 23:59:60。但是 Linux 好像压 根不知道这件事。这是因为 Unix 时间戳标准里，把一天定死为 86400 秒了。所以类 Unix 的处理方案是，当闰秒发生时由 ntrp 服务把时钟慢下来，当时间戳为 867715199 的时候， 让它在这个值上多停留 1 秒然后再进入 867715200。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zai-bian-cheng-yu-yan-zhong-huo-qu-utc-shi-jian-he-iso-ge-shi&quot;&gt;在编程语言中获取 UTC 时间和 ISO 格式&lt;&#x2F;h2&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.rfc-editor.org&#x2F;rfc&#x2F;rfc3339&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rfc3339-he-iso8601-zhi-jian-de-guan-xi&quot;&gt;RFC3339 和 ISO8601 之间的关系&lt;&#x2F;h2&gt;
&lt;p&gt;https:&#x2F;&#x2F;ijmacd.github.io&#x2F;rfc3339-iso8601&#x2F;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(九)</title>
        <published>2024-04-02T00:00:00+00:00</published>
        <updated>2024-04-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-9/"/>
        <id>https://blog.dich.ink/docker-learn-9/</id>
        
        <summary type="html">&lt;p&gt;前言 Docker CLI（命令行界面）是一个强大的工具，允许您与 Docker 容器、映像、卷和网络进行交互和管理。它为用户提供了广泛的命令，用于在开发和生产工作流中创建、运行和管理 Docker 容器和其他 Docker 资源。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(八)</title>
        <published>2024-04-01T00:00:00+00:00</published>
        <updated>2024-04-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-8/"/>
        <id>https://blog.dich.ink/docker-learn-8/</id>
        
        <summary type="html">&lt;p&gt;前言 容器安全是实现和管理容器技术（如 Docker）的关键方面。它包含一组实践、工具和技术，旨在保护容器化应用程序及其运行的基础结构。在本节中，我们将讨论一些关键的容器安全注意事项、最佳做法和建议。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(七)</title>
        <published>2024-03-31T00:00:00+00:00</published>
        <updated>2024-03-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-7/"/>
        <id>https://blog.dich.ink/docker-learn-7/</id>
        
        <summary type="html">&lt;p&gt;前言 容器镜像仓库是 Docker 容器镜像的集中存储和分发系统。它允许开发人员以这些映像的形式轻松共享和部署应用程序。容器镜像仓库在容器化应用程序的部署中起着至关重要的作用，因为它们提供了一种快速、可靠且安全的方式来跨各种生产环境分发容器映像。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(六)</title>
        <published>2024-03-30T00:00:00+00:00</published>
        <updated>2024-03-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-6/"/>
        <id>https://blog.dich.ink/docker-learn-6/</id>
        
        <summary type="html">&lt;p&gt;前言 容器映像是可执行包，其中包含运行应用程序所需的所有内容：代码、运行时、系统工具、库和设置。通过构建自定义映像，您可以在任何 Docker 支持的平台上无缝部署应用程序及其所有依赖项。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(五)</title>
        <published>2024-03-29T00:00:00+00:00</published>
        <updated>2024-03-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-5/"/>
        <id>https://blog.dich.ink/docker-learn-5/</id>
        
        <summary type="html">&lt;p&gt;前言 第三方映像是预构建的 Docker 容器映像，可在 Docker Hub 或其他容器注册表上使用。这些映像由个人或组织创建和维护，可用作容器化应用程序的起点。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(四)</title>
        <published>2024-03-28T00:00:00+00:00</published>
        <updated>2024-03-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-4/"/>
        <id>https://blog.dich.ink/docker-learn-4/</id>
        
        <summary type="html">&lt;p&gt;前言 Docker 使您能够运行与主机操作系统分离的隔离代码段（包括应用程序及其依赖项）的容器。默认情况下，容器是临时的，这意味着容器中存储的任何数据一旦终止就会丢失。为了克服这个问题并跨容器生命周期保留数据，Docker 提供了多种数据持久化方法。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(三)</title>
        <published>2024-03-27T00:00:00+00:00</published>
        <updated>2024-03-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-3/"/>
        <id>https://blog.dich.ink/docker-learn-3/</id>
        
        <summary type="html">&lt;p&gt;前言 Docker 是一个平台，可简化在轻量级、可移植容器中构建、打包和部署应用程序的过程。在本节中，我们将介绍 Docker 的基础知识、其组件以及入门所需的关键命令。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(二)</title>
        <published>2024-03-26T00:00:00+00:00</published>
        <updated>2024-03-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-2/"/>
        <id>https://blog.dich.ink/docker-learn-2/</id>
        
        <summary type="html">&lt;p&gt;前言 了解支持 Docker 的核心技术将有助于更深入地了解 Docker 的工作原理，并更有效地使用该平台。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Docker学习笔记(一)</title>
        <published>2024-03-25T00:00:00+00:00</published>
        <updated>2024-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/docker-learn-1/"/>
        <id>https://blog.dich.ink/docker-learn-1/</id>
        
        <summary type="html">&lt;p&gt;前言 Docker 是一个开源平台，通过将应用程序隔离到轻量级、可移植的容器中，自动执行应用程序的部署、扩展和管理。容器是独立的可执行单元，它封装了应用程序在各种环境中一致运行所需的所有必要依赖项、库和配置文件。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>搭建个人信息流:播客收听指北</title>
        <published>2024-03-06T00:00:00+00:00</published>
        <updated>2024-03-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-podcast-use/"/>
        <id>https://blog.dich.ink/awesome-podcast-use/</id>
        
        <summary type="html">&lt;p&gt;前言 讲起播客，许多人第一反应是喜马拉雅，但其实播客的订阅和收听有许多种方式。本文带你了解订阅播客的各种方式，并告诉你市面上有哪些不错的播客客户端可供选择。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>搭建个人信息流:RSS阅读指南</title>
        <published>2024-03-05T00:00:00+00:00</published>
        <updated>2024-03-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/rss-read/"/>
        <id>https://blog.dich.ink/rss-read/</id>
        
        <summary type="html">&lt;p&gt;前言 RSS 提供了一种数据格式，以 XML（可扩展标记语言）的形式组织信息，包括文章标题、摘要、链接和发布日期等。这些信息形成了所谓的“订阅源”（Feed），用户可以使用RSS阅读器（Feed Reader）来订阅这些源。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>开源世界:常用跨平台开源软件</title>
        <published>2024-03-04T00:00:00+00:00</published>
        <updated>2024-03-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/open-source-software/"/>
        <id>https://blog.dich.ink/open-source-software/</id>
        
        <summary type="html">&lt;p&gt;前言 本文旨在介绍一些常用的跨平台开源软件，涵盖了多个领域，包括办公、开发工具、多媒体处理等。这些软件不仅在功能上具有优势，而且秉承着开放、自由的精神，是上上之选。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>开源世界:开源软件与协议</title>
        <published>2024-03-03T00:00:00+00:00</published>
        <updated>2024-03-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/opensourcesoftware-licenses/"/>
        <id>https://blog.dich.ink/opensourcesoftware-licenses/</id>
        
        <summary type="html">&lt;p&gt;前言 本文旨在介绍开源软件许可证，这些许可证规定了使用、修改和分发开源软件的条件。通过了解不同类型的开源许可证及其特点，读者将能够更好地理解在开发和使用开源软件时的法律和道德责任。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>开源世界:有关开源的误区</title>
        <published>2024-03-02T00:00:00+00:00</published>
        <updated>2024-03-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/open-source-cross-platform-softs/"/>
        <id>https://blog.dich.ink/open-source-cross-platform-softs/</id>
        
        <summary type="html">&lt;p&gt;前言 在当今的软件开发领域，开源软件已经成为推动技术创新和知识共享的重要力量。尽管开源软件的理念和实践已经深入人心，但围绕它的一些误解和误区依然存在。本文旨在深入探讨和澄清这些常见的开源误区，帮助读者更全面、更准确地理解开源软件的本质、价值和实践方式。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>开源世界:什么是开源</title>
        <published>2024-03-01T00:00:00+00:00</published>
        <updated>2024-03-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/open-source-what/"/>
        <id>https://blog.dich.ink/open-source-what/</id>
        
        <summary type="html">&lt;p&gt;前言 「开源」一词对应英文 Open Source，最初起源于软件开发领域，因此也称为「开放源代码」，对应的软件则称为开源软件（Open Source Software，简称 OSS）。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>电子邮件是如何工作的:POP3&#x2F;IMAP&#x2F;SMTP</title>
        <published>2024-02-21T00:00:00+00:00</published>
        <updated>2024-02-21T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/how-email-works-2/"/>
        <id>https://blog.dich.ink/how-email-works-2/</id>
        
        <summary type="html">&lt;p&gt;前言 POP3、IMAP 和 SMTP 是用于电子邮件传输的常见协议和服务,这些协议共同构成了电子邮件系统的基础，允许用户接收、发送和管理电子邮件。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>电子邮件是如何工作的:SPF&#x2F;DKIM&#x2F;DMARC</title>
        <published>2024-02-20T00:00:00+00:00</published>
        <updated>2024-02-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/how-email-works-1/"/>
        <id>https://blog.dich.ink/how-email-works-1/</id>
        
        <summary type="html">&lt;p&gt;前言 在互联网的日常使用中，电子邮件作为一项基础服务扮演着重要的角色。尽管在过去几十年里出现了各种新型的通讯方式，但电子邮件仍然保持着其不可替代的地位。了解电子邮件的工作原理，有助于更好地理解这一基础服务是如何运作的。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Network的艺术:路由器原理与组网</title>
        <published>2024-02-19T00:00:00+00:00</published>
        <updated>2024-02-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/routing/"/>
        <id>https://blog.dich.ink/routing/</id>
        
        <summary type="html">&lt;p&gt;前言 所谓无线路由，就是具备无线覆盖的路由器，即我们常用的有天线的家用路由器。而家庭组网中，除了选择一个最合适的上网方案，一部好的路由器也是非常重要;那么，如何科学的选购路由器呢？&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Network的艺术:搜索引擎与爬虫</title>
        <published>2024-02-11T00:00:00+00:00</published>
        <updated>2024-02-11T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/searching/"/>
        <id>https://blog.dich.ink/searching/</id>
        
        <summary type="html">&lt;p&gt;前言 搜索引擎原理可以简单分为三个过程：爬行，索引，排名。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Network的艺术:国内至国际骨干ISP线路整理</title>
        <published>2024-02-10T00:00:00+00:00</published>
        <updated>2024-02-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/local-isps-to-cn-report/"/>
        <id>https://blog.dich.ink/local-isps-to-cn-report/</id>
        
        <summary type="html">&lt;p&gt;前言 本文主要探讨的是IPv4网络，国际出口线路的质量分析以及各大ISP的介绍。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Network的艺术:下载技术的历史</title>
        <published>2024-02-09T00:00:00+00:00</published>
        <updated>2024-02-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/network-download-1/"/>
        <id>https://blog.dich.ink/network-download-1/</id>
        
        <summary type="html">&lt;p&gt;前言 下载，就是将我们所需要的文件数据，通过网络从拥有该文件资源的计算机上传输过来并保存到我们的计算机上，供我们使用。本系列将详细讲述各种常见网络下载技术的原理，包括HTTP,FTP,BT等等。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:如何高效地向 ChatGPT 提问</title>
        <published>2024-01-07T00:00:00+00:00</published>
        <updated>2024-01-07T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/chatogpt/"/>
        <id>https://blog.dich.ink/chatogpt/</id>
        
        <summary type="html">&lt;p&gt;前言 本文翻译自《The Art of Asking ChatGPT for High-Quality Answers A Complete Guide to Prompt Engineering Techniques》&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:应届生工作指南</title>
        <published>2023-12-27T00:00:00+00:00</published>
        <updated>2023-12-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/about-working/"/>
        <id>https://blog.dich.ink/about-working/</id>
        
        <summary type="html">&lt;p&gt;前言 什么是“五险一金”？工资到底由那些部分组成？劳动合同怎么签？不仅仅是应届生，很多工作了几年的职场人，也不十分清楚。因此，在这里笔者打算帮助大家彻底把这些事情搞明白。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:Git使用简明手册</title>
        <published>2023-12-15T00:00:00+00:00</published>
        <updated>2023-12-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/git/"/>
        <id>https://blog.dich.ink/git/</id>
        
        <summary type="html">&lt;p&gt;前言 Git，作为现代软件开发中不可或缺的版本控制工具，常常让初学者感到困惑。本文旨在介绍 Git 的全流程安装和基本使用，希望能够帮助新手更轻松地理解和掌握 Git 的基本概念和操作。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:垃圾清理的艺术</title>
        <published>2023-11-19T00:00:00+00:00</published>
        <updated>2023-11-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/junk-cleanup/"/>
        <id>https://blog.dich.ink/junk-cleanup/</id>
        
        <summary type="html">&lt;p&gt;前言 在从前的机械硬盘时代，由于硬盘空间小，且没有时常清理垃圾文件，常常导致硬盘空间严重不足；特别是在以 Windows 平台为代表的 C&#x2F;D盘 体系下。那么，我们常说的垃圾清理，释放硬盘空间，到底是在清理什么？哪些文件可以被清理？&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:个人博客搭建</title>
        <published>2023-10-12T00:00:00+00:00</published>
        <updated>2023-10-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/zola-blog/"/>
        <id>https://blog.dich.ink/zola-blog/</id>
        
        <summary type="html">&lt;p&gt;前言 个人博客的搭建有诸多框架的选择。本文以Zola框架为例，介绍如何部署该静态站点，并将其托管到Paas平台上。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:机械革命键盘失灵拯救记</title>
        <published>2023-09-04T00:00:00+00:00</published>
        <updated>2023-09-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/mechrev-keyboard/"/>
        <id>https://blog.dich.ink/mechrev-keyboard/</id>
        
        <summary type="html">&lt;p&gt;前言 机械革命作为一款极高性价比的笔记本，其优惠的力度和问题不断的故障让玩家们爱恨交织；作者在其上安装 Linux 时遇到了键盘失灵的问题，为了避免更多人踩坑，故写本文。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:Windows单级菜单&#x2F;开机启动&#x2F;关闭更新</title>
        <published>2023-08-26T00:00:00+00:00</published>
        <updated>2023-08-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/windows-some-setting/"/>
        <id>https://blog.dich.ink/windows-some-setting/</id>
        
        <summary type="html">&lt;p&gt;前言 Windows操作系统作为全球最为普及的桌面操作系统之一，其用户界面的设计非常经典；而win11中的二级菜单令人感到无语，本文教你回到一级菜单。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:常见发音错误术语集合</title>
        <published>2023-08-25T00:00:00+00:00</published>
        <updated>2023-08-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/accurate-pronunciation/"/>
        <id>https://blog.dich.ink/accurate-pronunciation/</id>
        
        <summary type="html">&lt;p&gt;前言 中文和英语发音习惯不同，容易引起误解。本文旨在帮助您准确发音常见的科技术语，欢迎随时补充。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:流量卡购买与套路</title>
        <published>2023-08-24T00:00:00+00:00</published>
        <updated>2023-08-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/calling-cards/"/>
        <id>https://blog.dich.ink/calling-cards/</id>
        
        <summary type="html">&lt;p&gt;前言 由于临近升学，校园网不尽人意，因此许多小伙伴有了买一张流量卡的计划。本文以三大运营商为例，说明常见流量卡的套路与选择。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>乱七八糟:快过年了笑话大全</title>
        <published>2023-08-23T00:00:00+00:00</published>
        <updated>2023-08-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/kgnl/"/>
        <id>https://blog.dich.ink/kgnl/</id>
        
        <summary type="html">&lt;p&gt;前言 快过年了系列笑话常常于过年期间在各大平台传播，反应了各技术人士的爱好与工作。本文收集了24个该系列的笑话，欢迎补充。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:Win&#x2F;linux双系统部署</title>
        <published>2023-08-18T00:00:00+00:00</published>
        <updated>2023-08-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-win-linux/"/>
        <id>https://blog.dich.ink/awesome-win-linux/</id>
        
        <summary type="html">&lt;p&gt;前言 对于同时有着游戏和Linux环境需求的玩家来说，双系统似乎是其必经之路；而主流设备中两块的硬盘位也为双系统的安装提供了支持。本文以Revios+Garuda的安装为例介绍双系统的安装。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:黑群辉NAS极速安装</title>
        <published>2023-08-17T00:00:00+00:00</published>
        <updated>2023-08-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-nas-dsm/"/>
        <id>https://blog.dich.ink/awesome-nas-dsm/</id>
        
        <summary type="html">&lt;p&gt;前言 作为NAS家族中的重要一员，Synology的DSM以完善的服务和较高的售价闻名于世，因此，一般玩家倾向于工控机加黑群晖的方案组建自己的文件服务器。本文就黑群辉安装做了详细阐述。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:Arch从入门到入土</title>
        <published>2023-08-16T00:00:00+00:00</published>
        <updated>2023-08-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-arch-linux/"/>
        <id>https://blog.dich.ink/awesome-arch-linux/</id>
        
        <summary type="html">&lt;p&gt;前言 Arch linux是一个轻量、灵活、滚动更新的 Linux 发行版，衍生了诸多优秀的桌面端linux。其官方Wiki更是被称为技术界的“武林秘籍”；
但由于该Wiki的中文版比较陈旧，安装教程不太清楚，故先以虚拟机安装Arch为例实际操作一番。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:ChromeBook研究记</title>
        <published>2023-08-15T00:00:00+00:00</published>
        <updated>2023-08-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-chromebook/"/>
        <id>https://blog.dich.ink/awesome-chromebook/</id>
        
        <summary type="html">&lt;p&gt;前言 ChromeBook 作为国外一款定位为商务办公和学生入门的机器，其性能在2023年的当下似乎已经过时；在其退出中国市场后更是接近绝迹。不过，针对特殊需求下的部分机型在今天仍然极具性价比。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:Android TV 折腾小记</title>
        <published>2023-08-14T00:00:00+00:00</published>
        <updated>2023-08-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-android-tv/"/>
        <id>https://blog.dich.ink/awesome-android-tv/</id>
        
        <summary type="html">&lt;p&gt;前言 由于 AppleTV 的高昂的售价和普通电视盒子广告的泛滥，一台开源、多功能的原生安卓电视盒子逐渐成为智能家居的必备神器。出于对 IPTV、YouTube 和家庭影院等需求，以及对一面赏心悦目电视墙的期待，这里分享 Android TV （以下简称ATV）安装的一些要点。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:安卓刷机与root教程</title>
        <published>2023-08-13T00:00:00+00:00</published>
        <updated>2023-08-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-android-root/"/>
        <id>https://blog.dich.ink/awesome-android-root/</id>
        
        <summary type="html">&lt;p&gt;前言 自安卓系统诞生以来，root 一直是玩机的必备过程。时至今日，在安卓定制系统日益完善的情况下，能 root 的机型越来越少，本文以小米手机为例，介绍 root 的具体方法。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:OpenWrt 软路由部署</title>
        <published>2023-08-12T00:00:00+00:00</published>
        <updated>2023-08-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-openwrt/"/>
        <id>https://blog.dich.ink/awesome-openwrt/</id>
        
        <summary type="html">&lt;p&gt;前言 openwrt 是一个自由的、兼容性好的嵌入式 linux 发行版。作为软路由玩家必备的一款神器，可以实现诸如去广告，多拨和科学上网等多种功能。本文以 openwrt 在X86平台的安装为例，介绍其部署流程。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>综合工程:PVE安装与MC服务器搭建</title>
        <published>2023-08-11T00:00:00+00:00</published>
        <updated>2023-08-11T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/awesome-pve-mcsm/"/>
        <id>https://blog.dich.ink/awesome-pve-mcsm/</id>
        
        <summary type="html">&lt;p&gt;前言 假期将至，不少家里有闲置设备的小伙伴想尝试开设一个我的世界（Minecraft）服务器，却不知从何下手。本文以 PVE-Debian-MCSM 为主线介绍其部署流程。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux-For-PC(六):常用命令与性能分析</title>
        <published>2023-07-25T00:00:00+00:00</published>
        <updated>2023-07-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/linux-for-pc-6/"/>
        <id>https://blog.dich.ink/linux-for-pc-6/</id>
        
        <summary type="html">&lt;p&gt;前言 在学习Linux操作系统时，熟悉常用命令和性能分析工具是至关重要的。让我们一起探索Linux的世界，提升技能，解锁无限可能！&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux-For-PC(五):BIOS-UEFI-MBR-GPT-GRUB</title>
        <published>2023-07-24T00:00:00+00:00</published>
        <updated>2023-07-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/linux-for-pc-5/"/>
        <id>https://blog.dich.ink/linux-for-pc-5/</id>
        
        <summary type="html">&lt;p&gt;前言 在计算机领域，系统引导和磁盘分区是至关重要的。本文将介绍BIOS与UEFI，MBR与GPT，以及它们之间的异同点。此外，我们还会讨论与这些概念密切相关的引导加载程序——GRUB。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux-For-PC(四):Terminal，Console and Shell</title>
        <published>2023-07-23T00:00:00+00:00</published>
        <updated>2023-07-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/linux-for-pc-4/"/>
        <id>https://blog.dich.ink/linux-for-pc-4/</id>
        
        <summary type="html">&lt;p&gt;前言 在linux的学习过程中，我们常常遇到诸如 Terminal，Console，bash,zsh,shell,tty 等概念，这些概念常常被混淆，似乎都和命令行相关。本文从历史角度出发介绍它们的前世今生。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux-For-PC(三):内核&#x2F;shell&#x2F;包管理&#x2F;文件系统&#x2F;桌面环境</title>
        <published>2023-07-22T00:00:00+00:00</published>
        <updated>2023-07-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/linux-for-pc-3/"/>
        <id>https://blog.dich.ink/linux-for-pc-3/</id>
        
        <summary type="html">&lt;p&gt;前言 在Linux世界中，内核&#x2F;shell&#x2F;包管理&#x2F;文件系统构成了Linux系统的核心，它们相互配合，共同构建了一个强大而稳定的操作环境。本文将深入探讨这些关键组成部分，解释它们的作用和原理，帮助读者更好地理解Linux系统的运作机制。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux-For-PC(二):FHS与目录结构</title>
        <published>2023-07-21T00:00:00+00:00</published>
        <updated>2023-07-21T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/linux-for-pc-2/"/>
        <id>https://blog.dich.ink/linux-for-pc-2/</id>
        
        <summary type="html">&lt;p&gt;前言 在Linux世界中，Filesystem Hierarchy Standard（FHS）是一座引导我们进入系统核心的桥梁，它定义了Linux系统中目录结构的规范与作用，为我们提供了一张清晰的地图，指引我们轻松管理和理解系统。本文将深入探讨FHS规范与Linux系统目录结构，解释各个目录的用途与功能，帮助我们更好地理解和利用Linux系统。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux-For-PC(一):构成与发行版</title>
        <published>2023-07-20T00:00:00+00:00</published>
        <updated>2023-07-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dich.ink/linux-for-pc-1/"/>
        <id>https://blog.dich.ink/linux-for-pc-1/</id>
        
        <summary type="html">&lt;p&gt;前言 Linux 作为一款强大、灵活且免费的操作系统，吸引了越来越多的用户。然而，对于初学者来说，Linux 可能显得有些陌生，甚至有些令人望而生畏。本文旨在为那些刚踏入 Linux 世界的新手提供一份指南，帮助他们更好地了解、使用这个令人着迷的操作系统。我们将探讨Linux的基本概念，解释为何选择Linux，深入剖析其主要构成要素以及不同的发行版之间的差异。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
